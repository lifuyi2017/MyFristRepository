<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">
    <!--开启spring注解-->
    <context:annotation-config/>
    <context:component-scan base-package="cn.lifuyi.modules">
        <!-- 因为在spring-mybatis的配置文件中设置了扫描service，所以此处不用再扫描@Service注解(配置@Controller类似)，不然重复扫描会导致事务失效 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <!--开启MVC注解-->
    <mvc:annotation-driven  validator="validator">
        <mvc:message-converters>
            <!--配置MVC能接收JSON数据-->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <!--时间转换-->
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--配置视图-->
    <mvc:view-controller path="/user/gologin" view-name="login"/>
    <!--开启AOP注解-->
    <aop:aspectj-autoproxy/>
    <!--启动spring MVC的注解功能，完成请求和注解实体的映射-->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
    <!--配置视图-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--配置无参视图-->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--配置静态资源-->
    <mvc:resources mapping="/js/**" location="/sources/js/"/>
    <mvc:resources mapping="/jsl/**" location="/sources/moudles/js/"/>
    <mvc:resources mapping="/css/**" location="/sources/moudles/css/"/>
    <!--配置多文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <!--上传文件(所有)的大小10兆-->
        <property name="maxUploadSize" value="10485760"/>
    </bean>
    <!--拦截器配置-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--拦截所有请求-->
            <mvc:mapping path="/**"/>
            <!--设置拦截器属性:放行url-->
            <bean class="cn.lifuyi.modules.interceptor.LoginInterceptor">
                <property name="allowUrls">
                    <list>
                        <value>/login</value>
                        <value>/index</value>
                        <value>/js</value>
                        <value>/css</value>
                        <value>/imageServlet</value>
                        <value>/verificationCode</value>
                        <value>/user</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <!--测试JSR表单验证-->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages.properties"/>
        <!-- 资源文件的编码格式 -->
        <property name="fileEncodings" value="utf-8"/>
        <!-- 对资源文件的内容缓存的时间 -->
        <property name="cacheSeconds" value="60"/>
    </bean>
    <!-- Hibernate Validator校验 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- 使用HibernateValidator校验器 -->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <!--AMQ消息队列配置-->
    <bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
        <property name="userName" value="admin"/>
        <property name="password" value="admin"/>
    </bean>
    <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="amqConnectionFactory"/>
        <property name="sessionCacheSize" value="10"/>
    </bean>
    <!--发布-->
    <!--队列模式-->
    <bean id="queueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="connectionFactory"/>
        <property name="pubSubDomain" value="false"/>
    </bean>
    <!--发布订阅模式-->
    <bean id="topicTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="connectionFactory"/>
        <property name="pubSubDomain" value="true"/>
    </bean>
</beans>